#% text_encoding = iso8859_1
_package user
# Copyright © 2005 Minto Spatial Solutions Ltd.
#
# This software is released under the terms of version 2 of the
# GNU General Public License.  The full license text is
# provided in the license.txt file in the mss product
# directory, and is also available at http://www.fsf.org.

_pragma(classify_level=basic, topic={mss_cu})
##
## mss_cu_record_mixin
##
## Generic superclass for mss_cu datastore records.
##

def_mixin(:mss_cu_record_mixin)
$

_pragma(classify_level=basic, topic={mss_cu})
_method mss_cu_record_mixin.message(message_id, _gather args)
	## 
	## 

	_if _self.responds_to?(:source_collection) _andif
	    (tbl << _self.source_collection) _isnt _unset
	_then
		mh_name << tbl.name
	_else
		mh_name << _self.class_name
	_endif 
	_return message_handler.new(mh_name).human_string(message_id, _unset, _scatter args)
				    
_endmethod
$

_pragma(classify_level=restricted, topic={mss_cu})
_method mss_cu_record_mixin.insert_trigger()
	## 
	## 
	
_endmethod
$

_pragma(classify_level=restricted, topic={mss_cu})
_method mss_cu_record_mixin.update_trigger()
	## 
	## 
	
_endmethod
$

_pragma(classify_level=restricted, topic={mss_cu})
_method mss_cu_record_mixin.delete_trigger()
	## 
	## 
	
_endmethod
$

_pragma(classify_level=restricted, topic={mss_cu})
_method mss_cu_record_mixin.general_validator()
	## 
	## 

	_return _true
	
_endmethod
$

_pragma(classify_level=restricted, topic={mss_cu})
_method mss_cu_record_mixin.user_error(_gather args)
	## 
	## Raise a user error condition with a message constructed from ARGS.
	##

	condition.raise(:user_error, :string, _self.message(_scatter args))
	
_endmethod
$
