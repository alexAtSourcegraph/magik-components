#% text_encoding = iso8859_1
_package user
# Copyright © 2007 Minto Spatial Solutions Ltd.
#
# This software is released under the terms of version 2 of the
# GNU General Public License.  The full license text is
# provided in the license.txt file in the mss product
# directory, and is also available at http://www.fsf.org.

_pragma(classify_level=debug, topic={mss_common})
##
## mss_http_example_time_service
##
## Example service class to return an HTML document containing
## the current time.
##

def_slotted_exemplar(:mss_http_example_time_service,
{},
{:mss_http_service})
$

_pragma(classify_level=debug, topic={mss_common})
_method mss_http_example_time_service.process_service_request(req)
	## 
	## Respond to the request by reporting back the current time,
	## along with URL information.
	##

	.request << req
	resp << req.response

	nl << newline_char
	s << internal_text_output_stream.new()
	s.write("<html><head><title>MSS Time Server</title></head>", nl)
	s.write("<body text=#000000 bgcolor=#ffffff>", nl)
	s.write("<p><H2>MSS time server results</H2></p>", nl)
	s.write("<p>The current time is: ", date_time.now(), "</p>", nl)
	s.write("<p>The leaf portion of the URL that I care about is: ", .init_properties[:leaf_name], "</p>", nl)
	s.write("<p>The full URL sent to the server is: ", req.url, "</p>", nl)
	s.write("<p>You're at: ", .connection_manager.connection_description(), "</p>", nl)
	s.write("</body></html>")
	
	resp.set_header_field("Cache-Control", "private,max-age=0")
	resp.set_header_field("Content-Type", "text/html")
	resp.set_header_field("Connection", "Close")
	resp.response_object << s.string
	resp.set_status_code(200)

	# Finally, ask the server to send this request.
	_self.server.send_request_response(req)
		
_endmethod
$
