#% text_encoding = cp1252
_package sw
$
_pragma(classify_level=basic, topic={JSON}, usage={redefinable, subclassable})
_method dd_collection_mixin.convert_to_json()
	## convert_to_json() : json_array
	##
	## converts self to a json_array
	##
	## have to do it this way to avoid all the crazy method
	## conflicts. 

	_return json_array.new_from(_self)
_endmethod
$

_pragma(classify_level=restricted)
_method	dd_collection_mixin.write_as_json(a_stream)
	##
	##
	 _local s << a_stream
	 _local first? << _true
	 l_max_value << !json_max_records!
	 s.write(%[)
	 l_numb << 0
	_for i_object _over _self.fast_elements()
	_loop
		l_numb +<< 1
		_if ~first?
		_then s.write(%,)
		_else first? << _false
		_endif
		
		i_object.write_as_json(s)
		_if l_max_value _isnt _unset _andif
		    l_max_value <= l_numb
		_then
			_leave
		_endif 

	_endloop 
	s.write(%])

_endmethod
$

